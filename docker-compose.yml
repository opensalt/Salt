services:
  crontab:
    image: opensalt/opensalt:cron-3.x
    build:
      context: ./core/docker/cron
      cache_from:
        - opensalt/opensalt:cron-develop
    depends_on:
      - web
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      #- "./crontab.json:/opt/crontab/config.json:rw"
    environment:
      LOG_FILE: /dev/stdout
    restart: unless-stopped

  web:
    image: opensalt/opensalt:web-3.x
    build:
      context: ./core
      target: salt_core_prod
      args:
        - BUILD_NUMBER=${BUILD_NUMBER:-x}
        - BUILD_DATE=${BUILD_DATE:-0}
        - COMMIT=${COMMIT:-unknown}
        - VERSION=${VERSION:-3.3.0-dev}
    depends_on:
      - db
    environment:
      APP_ENV: "${APP_ENV:-prod}"
      APP_SECRET:
      APP_RUNTIME: 'Runtime\\FrankenPhpSymfony\\Runtime'
      SERVER_NAME: ${SERVER_NAME:-localhost}, :80
      MYSQL_DATABASE:
      MYSQL_USER:
      MYSQL_PASSWORD:
      MYSQL_HOST: "${MYSQL_HOST:-db}"
      DB_USE_RDS_CERT:
      MERCURE_URL: ${CADDY_MERCURE_URL:-http://web/.well-known/mercure}
      MERCURE_PUBLIC_URL: https://${SERVER_NAME:-localhost}/.well-known/mercure
      MERCURE_JWT_SECRET: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      MERCURE_PUBLISHER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      TRUSTED_PROXIES:
      CORS_ALLOW_ORIGIN:
      BRAND_LOGO_URL:
      BRAND_LOGO_STYLE:
      BRAND_LINK_URL:
      BRAND_LINK_STYLE:
      MFA_ISSUER:
      USE_MFA:
      FOOTER_LEFT_TEXT:
      ALLOW_LOCAL_DEV: "true"
      ALLOW_EXTERNAL_DEV_IPS:
      DEV_COOKIE:
      MAILER_DSN:
      USE_MAIL_FEATURE:
      MAIL_FEATURE_FROM_EMAIL:
      COMMENTS_FEATURE:
      COMMENT_ATTACHMENTS:
      ATTACHMENT_URL_PREFIX:
      CREATE_ACCOUNT_FEATURE:
      GOOGLE_CAPTCHA_SITE_KEY:
      GOOGLE_CAPTCHA_SECRET_KEY:
      AWS_ACCESS_KEY_ID:
      AWS_SECRET_ACCESS_KEY:
      AWS_S3_BUCKET:
      AWS_S3_REGION:
      AWS_S3_PREFIX:
      BUCKET_PROVIDER:
      LOCAL_FILESYSTEM_PATH:
      CASE_NETWORK_CLIENT_ID:
      CASE_NETWORK_CLIENT_SECRET:
      CASE_NETWORK_TOKEN_ENDPOINT:
      CASE_NETWORK_SCOPE:
    restart: unless-stopped
    sysctls:
      - net.ipv4.ip_unprivileged_port_start=0
    cap_add:
      - CAP_NET_BIND_SERVICE
    volumes:
      - caddy_data:/data/caddy
      - caddy_config:/config/caddy
    networks:
      default:
      external:
        aliases:
          - "${COMPOSE_PROJECT_NAME}-salt"

  db:
    image: opensalt/opensalt:db-3.x
    build:
      context: ./core/docker/mysql
      cache_from:
        - opensalt/opensalt:db-develop
    cap_add:
      - SYS_NICE # CAP_SYS_NICE
    environment:
      MYSQL_ROOT_PASSWORD:
      MYSQL_DATABASE:
      MYSQL_USER:
      MYSQL_PASSWORD:
    restart: unless-stopped
    volumes:
      #- db_data:/var/lib/mysql:rw
      # you may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      - "./core/docker/data/mysql:/var/lib/mysql:rw"

volumes:
#  db_data:
  caddy_data:
  caddy_config:

networks:
  external:
