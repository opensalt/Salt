{% extends "base.html.twig" %}

{% block title %}{{ lsItem.displayIdentifier |truncate(64, true) }}{% endblock %}

{% block body %}
    <div class="row">
        <div class="col-sm-12">
            <ol class="breadcrumb">
                <li><a href="{{ path('lsdoc_index') }}"><span class="glyphicon glyphicon-home" aria-hidden="true"></span><span class="sr-only">Home</span></a></li>
                <li><a href="{{ path('editor_lsdoc', {'id':lsItem.lsDoc.id}) }}">{{ lsItem.lsDoc.title |truncate(32, true) }}</a></li>
                <li class="active">{{ lsItem.displayIdentifier |truncate(64, true) }}</li>
            </ol>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-6">
            <section class="panel panel-default">
                {#
                <div class="panel-heading">
                    Learning Standard Item
                </div>
                #}
                <div class="panel-body">
                    <ul class="list-group">
                        {% for field, name in {
                            'humanCodingScheme': 'Human Coding Scheme',
                            'fullStatement': 'Full Statement',
                            'abbreviatedStatement': 'Abbreviated Statement',
                            'listEnumInSource': 'List Enumeration in Source',
                            'conceptKeywords': 'Concept Keywords',
                            'conceptKeywordsUri': 'Concept Keywords URI',
                            'language': 'Language',
                            'educationalAlignment': 'Educational Alignment',
                            'type': 'Type',
                            'licenceUri': 'Licence URI',
                            'changedAt': 'Last Changed',
                            'notes': 'Notes'
                        } %}
                            {% if attribute(lsItem, field) is not empty %}
                                <li class="list-group-item">
                                    <strong>{{ name }}:</strong>
                                    {% set value = attribute(lsItem, field) %}
                                    {% if value.timestamp is defined and value.timezone is defined %}
                                        {{ value|date }}
                                    {% elseif field == 'uri'%}
                                        <a href="{{ value|local_uri }}">{{ value|local_remote_uri }}</a>
                                    {% elseif field == 'lsDocUri'%}
                                        <a href="{{ value|local_uri }}">{{ value|local_remote_uri }}</a>
                                    {% else %}
                                        {{ value }}
                                    {% endif %}
                                </li>
                            {% endif %}
                        {% endfor %}
                    </ul>

                    {% if is_granted('edit', lsItem) or is_granted('add-standard-to', null) %}
                    <div class="text-center">
                        <ul class="list-inline">
                            {% if is_granted('edit', lsItem) %}
                            <li>
                                <button type="button" class="btn btn-sm btn-default" data-toggle="modal" data-target="#editModal">Edit</button>
                            </li>
                            {% endif %}
                            {% if is_granted('add-standard-to', null) %}
                            <li>
                                <button type="button" class="btn btn-sm btn-default" data-toggle="modal" data-target="#copyModal">Add to Another CF Package</button>
                            </li>
                            {% endif %}
                            {% if is_granted('edit', lsItem) %}
                            <li>
                                <button type="button" class="btn btn-sm btn-default" data-toggle="modal" data-target="#addChildModal">Create Child Statement</button>
                            </li>
                            <li>
                                <button type="button" class="btn btn-sm btn-default" data-toggle="modal" data-target="#associateModal">Add Association</button>
                            </li>
                            {% endif %}
                            {# TODO: How do we "find aligned resources"
                            <li>
                                <button type="button" class="btn btn-sm btn-default" disabled="disabled">Find Aligned Resources</button>
                            </li>
                            #}
                        </ul>
                    </div>
                    {% endif %}
                </div>
            </section>
        </div>

        <div class="col-sm-6">
            {% for group, list in lsItem.groupedAssociations if list is not empty %}
                {% embed 'framework/editor/_ls_association_component.html.twig' with {'title':group, 'items':list, 'viewingItem':lsItem, 'componentName':group|lower|replace({' ': '_'})} %}
                    {% block end_of_item_a %}
                        {% if is_granted('edit', lsItem) and is_granted('edit', lsItem.lsDoc) %}
                            <span class="pull-right">
                            {% if group is constant('App\\Entity\\Framework\\LsAssociation::CHILD_OF') %}
                                <span role="button" class="btn btn-xs btn-default btn-change-parent">Change</span>
                            {% elseif group is constant('App\\Entity\\Framework\\LsAssociation::INVERSE_CHILD_OF') %}
                                <span role="button" class="btn btn-xs btn-danger btn-remove-child">Remove</span>
                            {% else %}
                                <span role="button" class="btn btn-xs btn-danger btn-remove-association">Remove</span>
                            {% endif %}
                            </span>
                        {% endif %}
                    {% endblock %}
                {% endembed %}
            {% endfor %}
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12">
            <section class="panel panel-default panel-component">
                <div class="panel-heading">{{ lsItem.lsDoc.title }}</div>
                <div class="rendered-document panel-body">
                    {{ render_esi(path('editor_render', {'id':lsItem.lsDoc.id, 'highlight':lsItem.id})) }}
                </div>
            </section>
        </div>
    </div>


    {% embed 'framework/editor/_modal_component.html.twig' with {
        'modalName':'edit',
        'modalTitle':'Edit Learning Standard',
        'saveButton': 'Save changes'
    } %}
        {% block modalButtons %}
            <button type="button" class="btn btn-primary btn-save">Save Changes</button>
            <button type="button" class="btn btn-danger btn-delete {% if (lsItem.children is not empty) -%}disabled{%- endif %}" {% if (lsItem.children is not empty) -%} disabled="disabled"{%- endif %}>Delete</button>
        {% endblock %}
    {% endembed %}

    {% embed 'framework/editor/_modal_component.html.twig' with {
        'modalName':'addChild',
        'modalTitle':'Add Learning Standard',
        'saveButton': 'Create'
    } %}
    {% endembed %}

    {% embed 'framework/editor/_modal_component.html.twig' with {
        'modalName':'copy',
        'modalTitle':'Add Standard To Package',
        'saveButton': 'Copy'
    } %}
    {% endembed %}

    {% embed 'framework/editor/_modal_component.html.twig' with {
        'modalName':'associate',
        'modalTitle':'Add Relationship to this Standard',
        'saveButton': 'Associate'
    } %}
    {% endembed %}

    {% embed 'framework/editor/_modal_component.html.twig' with {
        'modalName':'changeParent',
        'modalTitle':'Change Parent of Item',
        'saveButton': 'Change'
    } %}
    {% endembed %}
{% endblock %}

{% block javascripts %}
    <script>
        window.app = window.app||{};
        app.lsItemId = {{ lsItem.id }};
        app.lsDocId = {{ lsItem.lsDoc.id }};
        app.path = app.path||{};
        app.path.lsitem_edit = '{{ path('lsitem_edit', {'id':'ID'}) }}';
        app.path.lsitem_delete = '{{ path('lsitem_delete', {'id':'ID'}) }}';
        app.path.lsitem_new = '{{ path('lsitem_new', {'doc':'DOC', 'parent':'PARENT'}) }}';
        app.path.lsitem_copy_item = '{{ path('lsitem_copy_item', {'id':'ID'}) }}';
        app.path.lsitem_remove_child = '{{ path('lsitem_remove_child', {'id':'ID', 'child':'CHILD'}) }}';
        app.path.lsitem_change_parent = '{{ path('lsitem_change_parent', {'id':'ID'}) }}';
        app.path.editor_lsdoc = '{{ path('editor_lsdoc', {'id':'ID'}) }}';
        app.path.lsassociation_new = '{{ path('lsassociation_new', {'sourceLsItem':'ID'}) }}';
        app.path.lsassociation_delete = '{{ path('lsassociation_remove', {'id':'ID'}) }}';

        function scrollToMark(){
            var
                $rdoc = $('.rendered-document'),
                //$hl = $('a[name=mark-{{ lsItem.id }}]')
                $hl = $('a[name=mark-'+app.lsItemId+']')
            ;

            if ($rdoc.length && $hl.length) {
                $hl.removeClass('text-muted').addClass('text-primary').css('font-weight', 'bold');
                $rdoc.scrollTop(($hl.offset().top-$rdoc.offset().top)-($rdoc.height()/3));
            }
        }

        function prepareEditModal(){
            var $editModal = $('#editModal');
            $editModal.on('shown.bs.modal', function(e){
                $('#editModal').find('.modal-body').load(
                    //'{{ path('lsitem_edit', {'id':lsItem.id}) }}',
                    app.path.lsitem_edit.replace('ID', app.lsItemId),
                    null,
                    function(responseText, textStatus, jqXHR) {
                        $('#ls_item_educationalAlignment').multiselect({
                            optionLabel: function(element) {
                                return $(element).html() + ' - ' + $(element).data('title');
                            },
                            numberDisplayed: 20
                        });
                        //$('.select2entity[data-autostart="true"]').select2entity();
                        $('#ls_item_itemType').select2entity({dropdownParent: $('#editModal')});
                    }
                )
            }).on('hidden.bs.modal', function(e){
                $('#editModal').find('.modal-body').html('...');
            });
            $editModal.find('.btn-save').on('click', function(e){
                //$editModal.find('form[name=ls_doc]').submit();
                $.ajax({
                    //url: '{{ path('lsitem_edit', {'id':lsItem.id}) }}',
                    url: app.path.lsitem_edit.replace('ID', app.lsItemId),
                    method: 'POST',
                    data: $editModal.find('form[name=ls_item]').serialize()
                }).done(function(data, textStatus, jqXHR){
                    $editModal.modal('hide');
                    window.location.reload(true);

                }).fail(function(jqXHR, textStatus, errorThrown){
                    $('#editModal').find('.modal-body').html(jqXHR.responseText);
                    $('#ls_item_educationalAlignment').multiselect({
                        optionLabel: function(element) {
                            return $(element).html() + ' - ' + $(element).data('title');
                        },
                        numberDisplayed: 20
                    });
                    $('#ls_item_itemType').select2entity({dropdownParent: $('#editModal')});
                });
            });
            $editModal.find('.btn-delete').on('click', function(e){
                //$editModal.find('form[name=ls_doc]').submit();
                $.ajax({
                    //url: '{{ path('lsitem_delete', {'id':lsItem.id}) }}',
                    url: app.path.lsitem_delete.replace('ID', app.lsItemId),
                    method: 'POST', {# TODO: Make DELETE work correctly #}
                    data: $editModal.find('form[name=form]').serialize()
                }).done(function(data, textStatus, jqXHR){
                    $editModal.modal('hide');
                    window.location.assign(app.path.editor_lsdoc.replace('ID', app.lsDocId));

                }).fail(function(jqXHR, textStatus, errorThrown){
                    $('#editModal').find('.modal-body').html(jqXHR.responseText);
                });
            });
        }

        function prepareAddChildModal(){
            var $addChildModal = $('#addChildModal');
            $addChildModal.on('shown.bs.modal', function(e){
                $('#addChildModal').find('.modal-body').load(
                        //'{{ path('lsitem_new', {'doc':lsItem.lsDoc.id, 'parent':lsItem.id}) }}',
                        app.path.lsitem_new.replace('DOC', app.lsDocId).replace('PARENT', app.lsItemId),
                        null,
                        function(responseText, textStatus, jqXHR){
                            $('#ls_item_educationalAlignment').multiselect({
                                optionLabel: function(element) {
                                    return $(element).html() + ' - ' + $(element).data('title');
                                },
                                numberDisplayed: 20
                            });
                            //$('.select2entity[data-autostart="true"]').select2entity();
                            $('#ls_item_itemType').select2entity({dropdownParent: $('#addChildModal')});
                        }
                )
            }).on('hidden.bs.modal', function(e){
                $('#addChildModal').find('.modal-body').html('...');
            });
            $addChildModal.find('.btn-save').on('click', function(e){
                //$addChildModal.find('form[name=ls_doc]').submit();
                $.ajax({
                    //url: '{{ path('lsitem_new', {'doc':lsItem.lsDoc.id, 'parent':lsItem.id}) }}',
                    url: app.path.lsitem_new.replace('DOC', app.lsDocId).replace('PARENT', app.lsItemId),
                    method: 'POST',
                    data: $addChildModal.find('form[name=ls_item]').serialize()
                }).done(function(data, textStatus, jqXHR){
                    $addChildModal.modal('hide');
                    window.location.reload(true);
                }).fail(function(jqXHR, textStatus, errorThrown){
                    $('#addChildModal').find('.modal-body').html(jqXHR.responseText);
                    $('#ls_item_educationalAlignment').multiselect({
                        optionLabel: function(element) {
                            return $(element).html() + ' - ' + $(element).data('title');
                        },
                        numberDisplayed: 20
                    });
                    $('#ls_item_itemType').select2entity({dropdownParent: $('#addChildModal')});
                });
            });
        }

        function prepareCopyModal(){
            var $copyModal = $('#copyModal');
            $copyModal.on('shown.bs.modal', function(e){
                $('#copyModal').find('.modal-body').load(
                        //'{{ path('lsitem_copy_item', {'id':lsItem.id}) }}',
                        app.path.lsitem_copy_item.replace('ID', app.lsItemId),
                        null,
                        function(responseText, textStatus, jqXHR){ }
                )
            }).on('hidden.bs.modal', function(e){
                $('#copyModal').find('.modal-body').html('...');
            });
            $copyModal.find('.btn-save').on('click', function(e){
                //$copyModal.find('form[name=ls_doc]').submit();
                $.ajax({
                    //url: '{{ path('lsitem_copy_item', {'id':lsItem.id}) }}',
                    url: app.path.lsitem_copy_item.replace('ID', app.lsItemId),
                    method: 'POST',
                    data: $copyModal.find('form[name=ls_doc_list]').serialize()
                }).done(function(data, textStatus, jqXHR){
                    $copyModal.modal('hide');
                    var location = jqXHR.getResponseHeader('Location');
                    if (location) {
                        window.location.assign(location);
                    } else {
                        window.location.reload(true);
                    }
                }).fail(function(jqXHR, textStatus, errorThrown){
                    $('#copyModal').find('.modal-body').html(jqXHR.responseText);
                });
            });
        }

        function prepareAssociateModal(){
            var $associateModal = $('#associateModal');
            $associateModal.on('shown.bs.modal', function(e){
                $('#associateModal').find('.modal-body').load(
                    //'{{ path('lsassociation_new', {'sourceLsItem':lsItem.id}) }}',
                    app.path.lsassociation_new.replace('ID', app.lsItemId),
                    null,
                    function(responseText, textStatus, jqXHR){ }
                )
            }).on('hidden.bs.modal', function(e){
                $('#associateModal').find('.modal-body').html('...');
            });
            $associateModal.find('.btn-save').on('click', function(e){
                //$associateModal.find('form[name=ls_doc]').submit();
                $.ajax({
                    //url: '{{ path('lsassociation_new', {'sourceLsItem':lsItem.id}) }}',
                    url: app.path.lsassociation_new.replace('ID', app.lsItemId),
                    method: 'POST',
                    data: $associateModal.find('form[name=ls_association]').serialize()
                }).done(function(data, textStatus, jqXHR){
                    $associateModal.modal('hide');
                    var location = jqXHR.getResponseHeader('Location');
                    if (location) {
                        window.location.assign(location);
                    } else {
                        window.location.reload(true);
                    }
                }).fail(function(jqXHR, textStatus, errorThrown){
                    $('#associateModal').find('.modal-body').html(jqXHR.responseText);
                });
            });

            $associateModal.on('change', '#ls_association_lsDoc', function(){
                var $lsDoc = $('#ls_association_lsDoc');
                var $form = $(this).closest('form');
                var data = {};
                data[$lsDoc.attr('name')] = $lsDoc.val();

                $('#lsItemListWrap').off('click');
                $.ajax({
                    //url: $form.attr('action'),
                    url: app.path.lsassociation_new.replace('ID', app.lsItemId),
                    type: $form.attr('method'),
                    data: data
                }).done(function(data, textStatus, jqXHR){
                    var $list = $(data).find('#ls_association_destinationLsItem');

                    $('#ls_association_destinationLsItem').closest('.form-group').remove();
                    $('#ls_association_destinationNodeUri').closest('.form-group').remove();
                    $('#ls_association_destinationNodeIdentifier').closest('.form-group').remove();

                    if ($list.length) {
                        $('#ls_association_lsDoc').closest('.form-group')
                            .after($(data).find('#ls_association_destinationLsItem').closest('.form-group'))
                    } else {
                        $('#ls_association_lsDoc').closest('.form-group')
                            .after($(data).find('#ls_association_destinationNodeUri').closest('.form-group'))
                            .after($(data).find('#ls_association_destinationNodeIdentifier').closest('.form-group'))
                        ;
                    }

                    $('#lsItemList').replaceWith($(data).find('#lsItemList'));

                    var $lsItemList = $('#lsItemListWrap');
                    $lsItemList.on('click', function(e){
                        e.stopPropagation();
                        e.preventDefault();

                        var $target = $(e.target);
                        $('#ls_association_destinationLsItem').val($target.attr('name').replace(/mark-/, ''));
                    });
                });
            });
        }

        function prepareChangeParentModal(){
            var
                $children = $('#item-component-parent'),
                $item = null
            ;
            $children.on('click', '.btn-change-parent', {}, function(e){
                e.preventDefault();

                $item = $(e.target).closest('.list-group-item');
                $('#changeParentModal').modal('show');
            });

            var $changeParentModal = $('#changeParentModal');
            $changeParentModal.on('shown.bs.modal', function(e){
                $('#changeParentModal').find('.modal-body').load(
                        //'{{ path('lsitem_change_parent', {'id':lsItem.id}) }}',
                        app.path.lsitem_change_parent.replace('ID', app.lsItemId),
                        null,
                        function(responseText, textStatus, jqXHR){
                            var $lsItemList = $('#lsItemListWrap-changeParent');
                            $lsItemList.on('click', '.lsItem', function(e){
                                e.stopPropagation();
                                e.preventDefault();

                                var $target = $(e.target);
                                $('#ls_item_parent_parentItem').val($target.attr('name').replace(/mark-/, ''));
                            });
                            $lsItemList.on('click', '.lsDoc', function(e){
                                e.stopPropagation();
                                e.preventDefault();

                                $('#ls_item_parent_parentItem').val('');
                            });
                        }
                )
            }).on('hidden.bs.modal', function(e){
                var $lsItemList = $('#lsItemListWrap-changeParent');
                $lsItemList.off('click', '.lsItem');
                $lsItemList.off('click', '.lsDoc');
                $('#changeParentModal').find('.modal-body').html('...');
            });

            $changeParentModal.find('.btn-save').on('click', function(e){
                $.ajax({
                    //url: '{{ path('lsitem_change_parent', {'id':lsItem.id}) }}',
                    url: app.path.lsitem_change_parent.replace('ID', app.lsItemId),
                    method: 'POST',
                    data: $changeParentModal.find('form[name=ls_item_parent]').serialize()
                }).done(function(data, textStatus, jqXHR){
                    $changeParentModal.modal('hide');
                    var location = jqXHR.getResponseHeader('Location');
                    if (location) {
                        window.location.assign(location);
                    } else {
                        window.location.reload(true);
                    }
                }).fail(function(jqXHR, textStatus, errorThrown){
                    $('#changeParentModal').find('.modal-body').html(jqXHR.responseText);
                });
            });
        }


        function prepareRemoveChildButton(){
            var $children = $('#item-component-children');
            $children.on('click', '.btn-remove-child', {}, function(e){
                e.preventDefault();

                var
                        target = $(e.target),
                        item = target.parents('.lsitem')
                        ;

                $.ajax({
                    //url: '{{ path('lsitem_remove_child', {'id':lsItem.id, 'child':'CHILD'}) }}'.replace('CHILD', item.data('itemId')),
                    url: app.path.lsitem_remove_child.replace('ID', app.lsItemId).replace('CHILD', item.data('itemId')),
                    method: 'POST'
                }).done(function(data, textStatus, jqXHR){
                    window.location.reload(true);
                }).fail(function(jqXHR, textStatus, errorThrown){

                });
            });
        }

        function prepareRemoveAssociationButton(){
            var $components = $('.item-component');
            $components.on('click', '.btn-remove-association', {}, function(e){
                e.preventDefault();

                var
                    target = $(e.target),
                    item = target.parents('.lsassociation')
                ;

                $.ajax({
                    //url: '{{ path('lsassociation_delete', {'id':lsItem.id}) }}',
                    url: app.path.lsassociation_delete.replace('ID', item.data('associationId')),
                    method: 'POST'
                }).done(function(data, textStatus, jqXHR){
                    window.location.reload(true);
                }).fail(function(jqXHR, textStatus, errorThrown){

                });
            });
        }

        $(document).ready(function(){
            scrollToMark();
            prepareEditModal();
            prepareAddChildModal();
            prepareCopyModal();
            prepareAssociateModal();
            prepareRemoveChildButton();
            prepareRemoveAssociationButton();
            prepareChangeParentModal();
        });
    </script>
{% endblock %}
