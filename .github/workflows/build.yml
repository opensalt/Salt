on:
  push:
  release:
    types: [published]

name: Build and Test

jobs:
  build:
    name: Build OpenSALT
    runs-on: ubuntu-latest
    env:
      COMPOSE_FILE: "docker-compose.yml:docker-compose.test.yml"
      RUN_TEST_ARGS: ${{ secrets.RUN_TEST_ARGS }}
      DEFAULT_RUN_TEST_ARGS: "--fail-fast --steps -x incomplete -x duplicate -x skip -x skip-firefox -x 0117-0708 -x 0108-0801 -x 1013-1444 -x change-notification"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # https://github.com/marketplace/actions/docker-layer-caching
      # Pull the latest image to build, and avoid caching pull-only images.
      # (docker pull is faster than caching in most cases.)
      - name: Pull images
        env:
          REPO: opensalt/opensalt
        run: |
          env
          cp -f .env.test .env
          docker pull $REPO:web-develop
          docker pull $REPO:db-develop
#      # In this step, this action saves a list of existing images,
#      # the cache is created without them in the post run.
#      # It also restores the cache if it exists.
#      - name: Cache docker layers
#        uses: satackey/action-docker-layer-caching@v0.0.11
#        # Ignore the failure of a step and avoid terminating the job.
#        continue-on-error: true
#        with:
#          key: opensalt-docker-cache-{hash}
#          restore-keys: |
#            opensalt-docker-cache-

      - name: Build the images
        run: |
          BUILD_NUMBER=${GITHUB_RUN_NUMBER} COMMIT=${GITHUB_SHA::8} make docker-build

      - name: Bring up db container
        run: |
          docker compose up -d --wait --wait-timeout 60 db
          sleep 30

      - name: Initialize db schema
        run: |
          docker compose run --rm --no-deps web ./bin/console --env=prod doctrine:migrations:migrate --no-interaction

      - name: Bring up the web container
        run: |
          docker compose up -d --wait --wait-timeout 30 web
          sleep 10
          docker compose ps

      - name: Initialize db data
        run: |
          docker compose exec web ./bin/console --env=prod import:generic-csv tests/_data/test_items.csv

      - name: Run tests
        run: ./core/bin/run-tests ${RUN_TEST_ARGS:-$DEFAULT_RUN_TEST_ARGS}

      - name: Failed
        if: ${{ failure() }}
        run: |
          docker compose logs web db

      - name: Login to DockerHub
        if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main' || github.event_name == 'release'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Push develop
        if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
        env:
          REPO: opensalt/opensalt
        run: |
          docker tag opensalt/opensalt:web-3.x $REPO:web-develop
          docker tag opensalt/opensalt:db-3.x $REPO:db-develop
          docker push $REPO:web-develop
          docker push $REPO:db-develop

      - name: Push latest
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        env:
          REPO: opensalt/opensalt
        run: |
          docker tag opensalt/opensalt:web-3.x $REPO:web-latest
          docker tag opensalt/opensalt:db-3.x $REPO:db-latest
          docker push $REPO:web-latest
          docker push $REPO:db-latest

      - name: Push release
        if: github.event_name == 'release'
        env:
          REPO: opensalt/opensalt
          TAG: ${GITHUB_REF/refs\/tags\//}
        run: |
          docker tag opensalt/opensalt:web-3.x $REPO:web-${TAG}
          docker tag opensalt/opensalt:db-3.x $REPO:db-${TAG}
          docker push $REPO:web-${TAG}
          docker push $REPO:db-${TAG}

      - name: Bring down the stack
        if: ${{ always() }}
        run: |
          docker compose down -v
