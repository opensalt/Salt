# -*- mode: nginx; mode: flyspell-prog;  ispell-local-dictionary: "american" -*-
user nginx;

## If you're using an Nginx version below 1.3.8 or 1.2. then uncomment
## the line below and set it to the number of cores of the
## server. Otherwise nginx will determine it automatically.
#worker_processes 4;

error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;

worker_rlimit_nofile 8192;

events {
    worker_connections 4096;
    ## Accept as many connections as possible.
    multi_accept on;
}

http {
    #types_hash_max_size 2048;
    ## MIME types.
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    open_file_cache max=100;

## This log format makes it so we can see real requester's IP address \
##    not just the reverse proxy server's IP address. Also note, that \
##    "specialLog" can be replaced with any name you would like to \
##    give to this log format.
    log_format main
	    '$http_x_real_ip - $remote_user [$time_local] '
            '"$request" $status $body_bytes_sent '
            '"$http_referer" "$http_user_agent" "$http_x_forwarded_for"';
#    log_format main
#	    '$remote_addr forwarded for $http_x_real_ip - $remote_user [$time_local] '
#            '"$request" $status $body_bytes_sent '
#            '"$http_referer" "$http_user_agent" "$http_x_forwarded_for"';

    ## Default log and error files.
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    ## Use sendfile() syscall to speed up I/O operations and speed up
    ## static file serving.
    sendfile on;
    ## Handling of IPs in proxied and load balancing situations.
    set_real_ip_from 10.0.0.0/8; # all local addresses get a real IP.
    set_real_ip_from 172.16.0.0/12; # all local addresses get a real IP.
    set_real_ip_from 192.168.0.0/16; # all local addresses get a real IP.
    set_real_ip_from 127.0.0.1/32; # localhost
    real_ip_header X-Forwarded-For; # the ip is forwarded from the load balancer/proxy
    real_ip_recursive off;

    ## Define a zone for limiting the number of simultaneous
    ## connections nginx accepts. 1m means 32000 simultaneous
    ## sessions. We need to define for each server the limit_conn
    ## value refering to this or other zones.
    limit_conn_zone $binary_remote_addr zone=arbeit:10m;

    ## Define a zone for limiting the number of simultaneous
    ## connections nginx accepts. 1m means 32000 simultaneous
    ## sessions. We need to define for each server the limit_conn
    ## value refering to this or other zones.
    ## ** Use this directive for nginx versions below 1.1.8. Uncomment the line below.
    #limit_zone arbeit $binary_remote_addr 10m;

    ## Timeouts.
    client_body_timeout 60;
    client_header_timeout 60;
    keepalive_timeout 10 10;
    send_timeout 60;

    ## Reset lingering timed out connections. Deflect DDoS.
    reset_timedout_connection on;

    ## Body size.
    client_max_body_size 200m;

    ## Buffer sizes (http://stackoverflow.com/questions/17708152/nginx-overwrites-general-symfony-errors-with-502-bad-gateway)
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;

    ## TCP options.
    tcp_nodelay on;
    ## Optimization of socket handling when using sendfile.
    tcp_nopush on;

    ## Compression.
    gzip on;
    gzip_buffers 16 8k;
    gzip_comp_level 1;
    gzip_http_version 1.1;
    gzip_min_length 10;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/x-icon application/vnd.ms-fontobject font/opentype application/x-font-ttf;
    gzip_vary on;
    gzip_proxied any; # Compression for all requests.
    ## No need for regexps. See
    ## http://wiki.nginx.org/NginxHttpGzipModule#gzip_disable
    gzip_disable msie6;

    ## Serve already compressed files directly, bypassing on-the-fly
    ## compression.
    ##
    # Usually you don't make much use of this. It's better to just
    # enable gzip_static on the locations you need it.
    # gzip_static on;

    ## Hide the Nginx version number.
    server_tokens off;

    ## Fill in with your own resolver.
    resolver ${RESOLVER} ipv6=off;
    resolver_timeout 10s;

    ## Uncomment to increase map_hash_bucket_size. If start getting
    ## [emerg]: could not build the map_hash, you should increase
    ## map_hash_bucket_size: 64 in your
    ## logs. Cf. http://wiki.nginx.org/NginxOptimizations.
    #map_hash_bucket_size 192;

    ## Uncomment one of the lines below if you start getting this message:
    ## "[emerg] could not build the variables_hash, you should increase
    ## either variables_hash_max_size: 512 or variables_hash_bucket_size: 64"
    ## You only need to increase one. Increasing variables_hash_max_size to 1024
    ## was recommended in nginx forum by developers.
    ## See this forum topic and responses
    ## http://forum.nginx.org/read.php?2,192277,192286#msg-192286
    ## See http://wiki.nginx.org/HttpCoreModule#variables_hash_bucket_size
    ## The line variables_hash_bucket_size was added for completeness but not
    ## changed from default.
    #variables_hash_max_size 1024; # default 512
    #variables_hash_bucket_size 64; # default is 64

    ## For the filefield_nginx_progress module to work. From the
    ## README. Reserve 1MB under the name 'uploads' to track uploads.
    #upload_progress uploads 1m;

    ## Enable the builtin cross-site scripting (XSS) filter available
    ## in modern browsers.  Usually enabled by default we just
    ## reinstate in case it has been somehow disabled for this
    ## particular server instance.
    ## https://www.owasp.org/index.php/List_of_useful_HTTP_headers.
    #proxy_hide_header X-XSS-Protection;
    #add_header X-XSS-Protection '1; mode=block';

    ## Enable clickjacking protection in modern browsers. Available in
    ## IE8 also. See
    ## https://developer.mozilla.org/en/The_X-FRAME-OPTIONS_response_header
    ## This may conflicts with pseudo streaming (at least with Nginx version 1.0.12).
    ## Uncomment the line below if you're not using media streaming.
    ## For sites being framing on the same domqin uncomment the line below.
    #add_header X-Frame-Options SAMEORIGIN;
    ## For sites accepting to be framed in any context comment the
    ## line below.
    #add_header X-Frame-Options DENY;

    ## Enable this if using HTTPS. See sites-available/example.com.conf
    ## for details.
    #add_header Strict-Transport-Security "max-age=7200";

    ## Block MIME type sniffing on IE.
    add_header X-Content-Options nosniff;

    ## Add a cache miss/hit status header. This can be disabled if not including
    ## any of the apps/drupal/microcache* files.
    add_header X-Micro-Cache $upstream_cache_status;

    ## FastCGI.
    include /etc/nginx/fastcgi.conf;

    ## Include the upstream servers for PHP FastCGI handling config.
    ## This one uses the FCGI process listening on TCP sockets.
    include upstream_phpcgi_tcp.conf;

    ## Include the map to block HTTP methods.
    include map_block_http_methods.conf;

    ## Support the X-Forwarded-Proto header for fastcgi.
    map $http_x_forwarded_proto $fastcgi_https {
        default $https;
        http '';
        https on;
    }

    ## Include the php-fpm status allowed hosts configuration block.
    ## Uncomment to enable if you're running php-fpm.
    include php_fpm_status_allowed_hosts.conf;

    ## Include the Nginx stub status allowed hosts configuration block.
    include nginx_status_allowed_hosts.conf;

    ## If you want to run cron using Drupal cron.php. i.e., you're not
    ## using drush then uncomment the line below. Specify in
    ## cron_allowed_hosts.conf which hosts can invole cron.
    include apps/drupal/cron_allowed_hosts.conf;

    ## Include blacklist for bad bot and referer blocking.
    include blacklist.conf;

    ## Include caching setup. Needed for using Drupal with an external cache.
    include apps/drupal/map_cache.conf;

    ## Microcache zone definition for FastCGI.
    include fastcgi_microcache_zone.conf;

    ## Include other configuration
    include /etc/nginx/conf.d/*.conf;

    ## Include all vhosts.
    include /etc/nginx/sites-enabled/*;

}
